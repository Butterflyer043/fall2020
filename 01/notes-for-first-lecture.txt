Data visualization is both art and science.

Data visualization is as valuable to anyone working with data as grammer is to anyone working with words. One should not write an essay withouy proper grammer just as one should not create a graph without first mastering data visualization best practices.

Learning visualization is an iterative process




SHORT HISTORY OF DATA VISUALIZATION
1) Most data visualization has taken place in the last 30 years.
a) The first record of data vis dates back to 200 AD
b) Astronomical data presentation for navigation
2) 1700s: Rene Descartes
a) Create the first recorded sort-of 2D “graph” to perform math.
b) This type of graph was later used to present data.
3) 1800-1900: Graphs and pie charts (WilliamPlayfair)
4) 1913: Iowa State University: Introduced some of the first courses in “graphing” data 5) 1977: Princeton University:
a) Statistics Professor John Tukey
b) Developed the first exploratory data analysis (EDA) using visualizations.

  6) 1983: Edward Tufte published “The Visual Display of Quantitative Information” which showed effective visualization methods.
7) 1984, Apple Computer introduced the first popular and affordable computer that focused in graphics (GIU) as a mode of interaction and display. This was huge and persists today.
8) 1999: The words, “information visualization” were so first named in the book: “Readings in Information Visualization: Using Vision to Think”, Card, Mackinlay, Shneiderman.
9) Around 2000ish - : In Few’s opinion, the IBM PC detracted from the value of making graphs by hand as it offers a mouse and computer-application based option. When people made graphs by hand, the took the time to be responsible.


Think about when you first get a dataset. Do any of these happen?
- You open the file, not sure what to expect
- You make and review summary charts and produce summary statistics to get a sense of what you are dealing with
- You may plug the dataset into a tool for a quick overview
-
-

A-ha! This is what John Tukey called _exploratory data analysis_ in 1977.

Exploratory data analysis is detective work—numerical detective work—or counting detective work—or graphical detective work.

You kind of know what you’re looking for, but you don’t know what you’re going to find yet. You work with your bag of tools through the available resources.
That’s when it’s just you. If labels are not aligned, or you have to tilt your head to see the data in the right way, or the chart type isn’t ideal, who cares? You know what you’re looking at or can make another chart to change the view so that you do.
A reader who lands on your chart (and the underlying data) does not have the same luxury of developing and answering questions like you did. Some might know little about data or making sense of it. Some might know more, but they don’t want to analyze the dataset. They want to know the results.
With this in mind, let’s look over the main differences between you making charts for people to read versus you using charts for analysis.

# D

# How to think about datavis
- Begin with the consumer in mind
You have a deep understaing of the data you are presenting
The audience that sees your visualizations may not
Make sure the graphic is clear
Makre sure the main point you want to make pops






# Why visualize data

- To communicate a story


# Numbers don't tell the whole story

anscombe and dinosair

# Summaries don't differentiate


# Good vs Bad



transition into "let the data speak"





# 7 Rules












Abhijit nores


## Objectives of this course

+ Understand principles of good data visualization
+ Know what might make a visualization poor or ineffective
+ Get you going using R __for visualization__
  + Various packages
+ Creating static and dynamic visualizations using R
+ Using the web as a presentation medium

---

## Course resources

### Website [https://faes.instructure.com/courses/262](https://faes.instructue.com/courses/262)

### Slack [https://biof439.slack.com](https://biof439.slack.com)


---

# Homework policies

- Homework assignments will be posted on the website by Wednesday following class. There will also be a submission link.
- Homework assignments submissions will be based on a R Markdown file and the corresponding HTML file, unless otherwise specified.
- Homework assignments are due back to me by the following Monday at midnight.
- You may be late on at most 1 homework out of the 4 homeworks that will be assigned.
- Homeworks will count for 50% of your grade.

### Collaboration

You are encouraged to collaborate either in person or through Slack, especially since there will be a fair amount of variability of R expertise in this class. However, your submitted work should be your own.


---

# Final Project

- A R Markdown dashboard using the `flexdashboard` package
- Use your own data
- Use R package(s) to visualize your data sets in at least 3 ways, to show what your data looks like and what your analytic results look like.
- Each student will be randomly assigned to 2 peers
  - Critiques based on quality and effectiveness of visualizations
- All final projects will be posted on the website, so we can learn from each other (unless you let me know first, for example, if the data is private and embargoed)
- I fully expect some of you to blow me away!!

This will count for 20% of your grade

---

# Class participation

- Come prepared for class
- Ask questions
- Comment on the strengths and weaknesses of visualizations when we work on them
- Discuss topics on the Slack channel

This will count for 30% of your grade

---

# Exemplar data

I don't work in bioinformatics anymore, or your particular disciplines. So:

- you can send me exemplar datasets by the night of the 3rd class (February 18), as well as telling me what you want to achieve
- I will try to incorporate common examples into the classes
- I will get you back completed visualizations or at least what I could achieve, on the last day of class.

---

# Contact info

### Email: adasgupta+biof439@araastat.com (don't use my NED email)

### Slack

---

# Code repository

All the code and materials for this class will be stored on GitHub, which is an online version control repository. You can access it from the class website

---

# Software requirements

For this class you will need R and RStudio.

1. You can install R on your machine from https://cran.r-project.org. There are versions for Windows, Mac OS X and Linux. On windows machines, R can be installed without administrative privileges
1. You can install RStudio from [RStudio](https://rstudio.com/products/rstudio/download/#download). If you have a Windows machine and do not have administrative privileges, you should download the version from the Zip/Tarballs section, open the zip file and just run RStudio.exe from there.
1. You can access R and RStudio online without any installations using [RStudio Cloud](https://rstudio.cloud/). You can get an account for free.

---

# Software requirements

For R, we will require the following packages:

1. `tidyverse` (a meta-package containing 8 other packages)
1. `flexdashboard` (the main reporting package)
1. `RColorBrewer` and `viridis` (color palettes)
1. `shiny` for some interactivity
1. `htmlwidgets`, `plotly`,`DataTables`, `highcharter` for dynamic plotting and reporting

> On the website, there will be a file *packages.R*. This will have the R script to
install these packages. There will be instructions and (hopefully) a screencast up by Thursday

---

# Other useful software

1. Adobe Illustrator / Inkscape
1. Adobe Photoshop / GIMP
1. Adobe Reader Pro / Preview
1. ImageMagick (accessible via the R package `magick`)

